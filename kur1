#!/bin/sh

echo "*********************eudev çalıştırıldı ******************************"
udevd --daemon --resolve-names=never #modprobe yerine kullanılıyor
udevadm trigger --type=subsystems --action=add
udevadm trigger --type=devices --action=add
udevadm settle || true
echo "*********************ek modüller yüklendi ******************************"

#mount -o remount,rw / || true
#export PATH=/bin:/sbin:/usr/bin:/usr/sbin
setup_parts=()
setup_grub=""
auto_disk=""
DISKX=""
> /tmp/installer-parts
debug=false


fallback(){
        echo -e "\033[31;1mInstallation failed.\033[;0m"
        echo -e "Creating a shell for debuging. Good luck :D"
        PS1="\[\033[32;1m\]>>>\[\033[;0m\]" /bin/bash --norc --noprofile
        if [[ $$ -eq 0 ]] ; then
		echo "bir sorun çıktııı"
           	#echo o > /proc/sysrq-trigger
        else
        	echo "çıkılacak"
        	#exit 1
        fi
}

select_disk_install()
{

DISK=$1
echo kurulum yapılacak disk $DISK

   #########################################################
    if echo ${DISK} | grep nvme ; then
        DISKX=${DISK}p
    else
        DISKX=${DISK}
    fi

ldconfig
mkdir -p hedef
mkdir -p kaynak
mkdir -p cdrom

echo "*********************disk bölümleri silindi ******************************${DISK}"
    
    
  dd if=/dev/zero of=${DISK} bs=512 count=1
    sync && sleep 1

        yes | parted ${DISK} mktable msdos || fallback
        yes | parted ${DISK} mkpart primary fat32 1 "100%" || fallback
        sync && sleep 1
         yes |e2fsck -f ${DISKX}1
         sync && sleep 1
	yes |tune2fs -O ^metadata_csum ${DISKX}1
	 sync && sleep 1
        yes | mkfs.ext4  ${DISKX}1 || fallback
        yes | parted ${DISK} set 1 esp on || fallback
        sync && sleep 1
        mount ${DISKX}1  /hedef || fallback
        mkdir -p /hedef/boot 
echo "********************* kurulum başladı******************************"

mount -t iso9660 -o loop /dev/sr0 cdrom
mount -t squashfs -o loop /cdrom/live/filesystem.squashfs /kaynak
cp -prfv /kaynak/* /hedef/
cp /cdrom/boot/initrd.img /hedef/boot/initrd.img-$(uname -r)
cp /cdrom/boot/vmlinuz /hedef/boot/vmlinuz-$(uname -r)
cp /hedef/etc/kernel-config /hedef/boot/config-$(uname -r)
sync

mkdir -p /hedef/dev
mkdir -p /hedef/sys
mkdir -p /hedef/proc
mkdir -p /hedef/run
mkdir -p /hedef/tmp
sync

mount --bind /dev /hedef/dev
mount --bind /sys /hedef/sys
mount --bind /proc /hedef/proc
mount --bind /run /hedef/run
mount --bind /tmp /hedef/tmp
chroot /hedef /bin/busybox --install -s /bin

chroot /hedef /etc/init.d/agettyinstall
rm /hedef/etc/init.d/agettyinstall


chroot /hedef /usr/sbin/update-initramfs -u -k $(uname -r)

chroot /hedef grub-install --boot-directory=/boot ${DISK} --target=i386-pc

mkdir -p /hedef/boot/grub
bid=$(blkid ${DISKX}1|cut -d' ' -f2|cut -c 7-42)
rm -rf /hedef/boot/grub/grub.cfg
touch /hedef/boot/grub/grub.cfg
echo "linux /boot/vmlinuz-$(uname -r) init=/sbin/openrc-init root=UUID=${bid} rw quiet">>/hedef/boot/grub/grub.cfg
echo "initrd /boot/initrd.img-$(uname -r)">>/hedef/boot/grub/grub.cfg
echo "boot">>/hedef/boot/grub/grub.cfg

echo root:x:0:0:root:/root:/bin/sh > /hedef/etc/passwd 
chroot /hedef chmod 755 /etc/passwd

chroot /hedef adduser -D -s /bin/sh by -h /home/by
chroot /hedef echo -e "1\n1\n"|chroot /hedef passwd by
chroot /hedef echo -e "1\n1\n"|chroot /hedef passwd root

umount -f -R /hedef/* || true
sync  || fallback

if [[ "$debug" != "false" ]] ; then
    PS1="\[\033[32;1m\]>>>\[\033[;0m\]" /bin/bash --norc --noprofile
else
    echo "Installation done. System restarting in 3 seconds. Press any key to restart immediately."
    read -t 3 -n 1 -s
fi
if [[ $UID -eq 0 ]] ; then
	echo "kurulum tamamlandı..."
    	#echo b > /proc/sysrq-trigger
else
    	echo "son............"
    	#exit 0
fi
}






###### Main Menu ######
main_menu(){
    while true ; do
        result=$(dialog --no-cancel \
            --output-fd 1 --menu \
            "Main Menu" 0 0 0 \
            "1" "Install" \
            "2" "Run Terminal" \
            "0" "Reboot"
        )
      #              "2" "Manual Install" \
        echo -ne "\033c"
        if [[ $result -eq 0 ]] ; then
            echo "yeniden başlatma ........ana menü"
            #reboot -f
        elif [[ $result -eq 1 ]] ; then
            install_menu
         elif [[ $result -eq 2 ]] ; then
           echo -e "\033[33;1mTerminal mode. You can type exit and go back.\033[;0m"
            PS1="\033[32;1m>>>\033[;0m " /bin/busybox ash
        fi
        echo $result
    done
}


install_menu(){
    while true ;  do
       auto_disk=/dev/$(TITLE="Select a disk for installation" select_disk)
       setup_grub=${auto_disk}
       #auto_install_main
       select_disk_install ${auto_disk}
    done
}




###### Disk selection menu ######
select_disk(){
    export PATH="/bin:/sbin:/usr/bin:/usr/sbin"
    menu=()
    for disk in $(ls /sys/block/ | grep -e sd -e nvme) ; do
        disk=${disk/*\//}
        size=$(lsblk -r | grep "^$disk " | cut -f4 -d" ")
        menu+=("$disk" "$size")
    done >/dev/null
    while [[ ! -b "/dev/$result" ]] ; do
        result=$(dialog --no-cancel \
            --output-fd 1 --menu \
            "$TITLE" 0 0 0 \
            "${menu[@]}")
    done
    echo $result
}



###### terminal ######
create_shell(){
    set +e
    echo -e "\033[33;1mTerminal mode. You can type exit and go back.\033[;0m"
    PS1="\033[32;1m>>>\033[;0m " \
        /bin/busybox ash
    set -e
}
    	main_menu || create_shell
  


